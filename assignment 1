## Create a table 

CREATE TABLE products (
sku char(10),
name varchar(50),
category varchar(30),
price numeric(10,2),
description varchar,
ship_weight numeric(6,1),
date_listed timestamp,
last_update timestamp
);


## Insert values into the table 

INSERT INTO products (sku, name, category, price, description, ship_weight, date_listed, last_update)
VALUES ('TSD992456',
'Philips Norelco Shaver 4500',
'Personal Care',
'54.99',
'The Philips Norelco Shaver 4500 lets you shave any way you want. The AquaTec seal gives you the option of either a comfortable dry shave or a refreshing we shave with or without shaving cream or gel.',
'14.4',
'2016-02-20 09:12:00',
'2018-01-12 15:23:00'
), 
('SPE237105',
'Ticonderoga Pencils #2 HB Soft, 30-Pack',
'Office Products',
'4.99',
'Ticonderoga has a tradition of fine quality writing instruments in the US for over 100 years. The exclusive graphite core features a proprietary formula focusing on graphite mined from carefully controlled sources to deliver extra smooth performance.',
'5.8',
'2015-12-01 07:34:50',
'2015-12-01 07:34:50'
),
('KLQ509364',
'Anker PowerCore 10000 PD',
'Cell Phones & Accessories',
'34.99',
NULL,
'5.6',
'2019-04-15 15:05:23',
NULL
);


 ## SQL statement that returns all attributes and tuples from table products of category "Office Products"

SELECT * 
FROM products 
WHERE category = 'Office Products';


## SQL statement that returns sku, name, category, price and ship_weight in grams 

SELECT sku, name, category, price, ship_weight*28.3495 AS ship_weight_grams
FROM products;


## SQL statement that returns the "name" and "price" attributes of all Personal Care products that contain the word "shave" 

SELECT name, price 
FROM products
WHERE category = 'Personal Care' AND  description LIKE '%shave%';


## SQL statement that creates a relation named "vendors" with attributes "vendor_id", "name", "country" 

CREATE TABLE vendors (
vendor_id integer,
name varchar(60),
country varchar(30)
);


## SQL statement that alters relation "products" adding an attribute called "vendor_id" 

ALTER TABLE products
ADD vendor_id integer;


## SQL statement that returns the product name with the maximum ship_weight of "Cell Phones & Accessories" products. 

SELECT name, ship_weight
FROM products
WHERE ship_weight IN (SELECT MAX(ship_weight) FROM products WHERE category='Cell Phones & Accessories');


## SQL statement that returns the category and average price per product category, of all products listed after January 1st, 2018.

SELECT category,ROUND(AVG(price),2)AS avg_price
FROM products
WHERE date_listed > '2018-01-01 24:00:00'
GROUP BY category;


## SQL statement that returns the sku, name, category, price and vendor name of all products supplied by a vendor from the "USA".

SELECT P.sku, P.name, P.category, P.price, V.name
FROM products AS P, vendors AS V
WHERE P.vendor_id = V.vendor_id 
AND V.country = 'USA';


## SQL statement that returns the product name, category, price, ship_weight and vendor country of all products. Display the results by
## descending ship_weight and date_listed. 

SELECT P.name, P.category, P.price, P.ship_weight, V.country
FROM products AS P, vendors AS V
WHERE P.vendor_id = V.vendor_id
ORDER BY P.ship_weight DESC, P.date_listed DESC;   


## SQL statement that returns the category, vendor_id and total number of products for each category/vendor_id combination.

SELECT category, vendor_id, COUNT(*) AS product_count
FROM products 
GROUP BY category, vendor_id;


## SQL statement that returns the unique combination of category and ship_weight from the products relation.

SELECT DISTINCT category, ship_weight
FROM products;


## SQL statement that deletes all tuples from relation "products" of products listed prior to 2017.

DELETE FROM products 
WHERE date_listed < '2017-01-01 00:00:00';


## SQL statement that removes the "vendors" relation from the database.

DROP TABLE vendors;
